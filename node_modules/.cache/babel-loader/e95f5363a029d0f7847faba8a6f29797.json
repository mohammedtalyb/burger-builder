{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: classes.InputElement,\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, props.elementConfig.options.map(option => React.createElement(\"option\", {\n        value: option.value,\n        key: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, option.displayValue)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Input","props","inputElement","elementType","InputElement","elementConfig","value","options","map","option","displayValue","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAM,OAAN;AACID,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACK;AAA1B,SAA4CH,KAAK,CAACI,aAAlD;AAAiE,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;;AACJ,SAAM,UAAN;AACIJ,MAAAA,YAAY,GAAG;AAAU,QAAA,SAAS,EAAEH,OAAO,CAACK;AAA7B,SAA+CH,KAAK,CAACI,aAArD;AAAoE,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;;AACJ,SAAM,QAAN;AACIJ,MAAAA,YAAY,GAAG;AAAQ,QAAA,SAAS,EAAEH,OAAO,CAACK,YAA3B;AAAyC,QAAA,KAAK,EAAEH,KAAK,CAACK,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACVL,KAAK,CAACI,aAAN,CAAoBE,OAApB,CAA4BC,GAA5B,CAAiCC,MAAD,IAC7B;AAAQ,QAAA,KAAK,EAAEA,MAAM,CAACH,KAAtB;AAA6B,QAAA,GAAG,EAAEG,MAAM,CAACH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCG,MAAM,CAACC,YADR,CADH,CADU,CAAf;AAOA;;AACJ;AACIR,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACK;AAA1B,SAA4CH,KAAK,CAACI,aAAlD;AAAiE,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAjBR;;AAoBA,SACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAED,OAAO,CAACY,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCV,KAAK,CAACW,KAAxC,CADJ,EAEKV,YAFL,CADJ;AAMH,CA7BD;;AA+BA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input className={classes.InputElement} {...props.elementConfig} value={props.value}/>;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={classes.InputElement} {...props.elementConfig} value={props.value}/>;\n            break;\n        case ('select'):\n            inputElement = <select className={classes.InputElement} value={props.value} >\n                {props.elementConfig.options.map((option) => (\n                    <option value={option.value} key={option.value}>\n                    {option.displayValue}\n                    </option>\n                ))}\n            </select>;\n            break;\n        default:\n            inputElement = <input className={classes.InputElement} {...props.elementConfig} value={props.value}/>;\n    }\n    \n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}