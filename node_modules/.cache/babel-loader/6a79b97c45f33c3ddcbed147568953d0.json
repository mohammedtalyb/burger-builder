{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport classes from './Input.css';\n\nconst Input = props => {\n  let inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      console.log(props.elementConfig);\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      console.log(props.elementConfig); // inputElement = <select className={classes.InputElement} value={props.value} >\n      //                     {/* {props.elementConfig.options.map((option) => (\n      //                         <option value={option.value} key={option.value}>\n      //                             {option.displayValue}\n      //                         </option>\n      //                     ))} */}\n      //                     {}\n      //             </select>;\n\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/components/UI/Input/Input.js"],"names":["React","classes","Input","props","inputElement","elementType","console","log","elementConfig","InputElement","value","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;;AAEA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAM,OAAN;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,aAAlB;AACAJ,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACQ;AAA1B,SAA4CN,KAAK,CAACK,aAAlD;AAAiE,QAAA,KAAK,EAAEL,KAAK,CAACO,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;;AACJ,SAAM,UAAN;AACIN,MAAAA,YAAY,GAAG;AAAU,QAAA,SAAS,EAAEH,OAAO,CAACQ;AAA7B,SAA+CN,KAAK,CAACK,aAArD;AAAoE,QAAA,KAAK,EAAEL,KAAK,CAACO,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AACA;;AACJ,SAAM,QAAN;AACQJ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,aAAlB,EADR,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACJ;AACIJ,MAAAA,YAAY,GAAG;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACQ;AAA1B,SAA4CN,KAAK,CAACK,aAAlD;AAAiE,QAAA,KAAK,EAAEL,KAAK,CAACO,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AApBR;;AAuBA,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAED,OAAO,CAACU,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCR,KAAK,CAACS,KAAxC,CADJ,EAEKR,YAFL,CADJ;AAMH,CAhCD;;AAkCA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Input.css';\n\nconst Input = (props) => {\n    let inputElement = null;\n\n    switch (props.elementType) {\n        case ('input'):\n            console.log(props.elementConfig)\n            inputElement = <input className={classes.InputElement} {...props.elementConfig} value={props.value} />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={classes.InputElement} {...props.elementConfig} value={props.value} />;\n            break;\n        case ('select'):\n                console.log(props.elementConfig)\n            // inputElement = <select className={classes.InputElement} value={props.value} >\n            //                     {/* {props.elementConfig.options.map((option) => (\n            //                         <option value={option.value} key={option.value}>\n            //                             {option.displayValue}\n            //                         </option>\n            //                     ))} */}\n            //                     {}\n            //             </select>;\n            break;\n        default:\n            inputElement = <input className={classes.InputElement} {...props.elementConfig} value={props.value} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}