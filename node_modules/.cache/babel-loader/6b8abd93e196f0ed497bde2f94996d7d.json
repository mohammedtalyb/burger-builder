{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        email: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your Mail'\n          },\n          value: ''\n        },\n        city: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your City'\n          },\n          value: ''\n        },\n        pinCode: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Pincode'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementTye: 'select',\n          options: [{\n            value: 'fastest',\n            displayValue: 'Fastest'\n          }, {\n            value: 'cheapest',\n            displayValue: 'Cheapest'\n          }]\n        }\n      },\n      isLoading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        totalPrice: this.props.totalPrice\n      };\n      axios.post('/order.json', order).then(response => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => this.setState({\n        isLoading: false\n      }));\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, formElementsArray.map(formElement => React.createElement(Input, {\n      key: formElement.key,\n      elementTye: formElement.config.elementTye,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Button, {\n      buttonType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Order\"));\n    if (this.state.isLoading) form = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Enter your contact data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","ContactData","state","orderForm","name","elementTye","elementConfig","type","placeholder","value","email","city","pinCode","deliveryMethod","options","displayValue","isLoading","orderHandler","event","preventDefault","setState","order","ingredients","props","totalPrice","post","then","response","history","push","catch","error","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            email: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Mail'\n                },\n                value: ''\n            },\n            city: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your City'\n                },\n                value: ''\n            },\n            pinCode: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Pincode'\n                },\n                value: ''\n            },\n            deliveryMethod: {\n                elementTye: 'select',\n                options: [\n                    { value: 'fastest', displayValue: 'Fastest' },\n                    { value: 'cheapest', displayValue: 'Cheapest' }\n                ]\n            }\n        },\n        isLoading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        this.setState({ isLoading: true });\n        const order = {\n            ingredients: this.props.ingredients,\n            totalPrice: this.props.totalPrice,\n\n        }\n\n        axios.post('/order.json', order)\n            .then(response => {\n                this.setState({ isLoading: false });\n                this.props.history.push('/');\n            })\n            .catch(error => this.setState({ isLoading: false }));\n    }\n\n    render() {\n        const formElementsArray = [];\n\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key],\n            });\n        }\n        let form = (\n            <form>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.key}\n                        elementTye={formElement.config.elementTye}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value} />\n                ))}\n                <Button buttonType=\"Success\" clicked={this.orderHandler}>Order</Button>\n            </form>\n        );\n\n        if (this.state.isLoading) form = <Spinner />;\n\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your contact data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}