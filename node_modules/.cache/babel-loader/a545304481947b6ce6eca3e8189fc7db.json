{"ast":null,"code":"import _objectSpread from \"/home/mohammed/Documents/react Max/react project/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../Hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 1,\n  meat: 1.7,\n  bacon: 1\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        meat: 0,\n        cheese: 0\n      },\n      totalprice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(ingredientKey => ingredients[ingredientKey]).reduce((sum, ingredientValue) => sum + ingredientValue, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatesIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatesIngredients,\n        totalprice: newPrice\n      });\n      this.updatePurchaseState(updatesIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n\n      const updatesIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatesIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalprice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        ingredients: updatesIngredients,\n        totalprice: newPrice\n      });\n      this.updatePurchaseState(updatesIngredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      addIngredient: this.addIngredientHandler,\n      removeIngredient: this.removeIngredientHandler,\n      disabledInfo: disabledInfo,\n      price: this.state.totalprice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalprice","purchasable","purchasing","updatePurchaseState","sum","Object","keys","map","ingredientKey","reduce","ingredientValue","setState","purchaseHandler","addIngredientHandler","type","oldCount","updatedCount","updatesIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../Hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 1,\n    meat: 1.7,\n    bacon: 1\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            meat: 0,\n            cheese: 0\n        },\n        totalprice: 4,\n        purchasable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients).map( ingredientKey => ingredients[ingredientKey])\n                    .reduce((sum, ingredientValue) => sum + ingredientValue, 0);\n        this.setState({ purchasable: sum > 0 });\n    }\n\n    purchaseHandler = () => {\n        this.setState({ purchasing: true });\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatesIngredients = { ...this.state.ingredients };\n        updatesIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalprice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            ingredients: updatesIngredients,\n            totalprice: newPrice\n        })\n        this.updatePurchaseState(updatesIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) return;\n        const updatedCount = oldCount - 1;\n        const updatesIngredients = { ...this.state.ingredients };\n        updatesIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalprice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n            ingredients: updatesIngredients,\n            totalprice: newPrice\n        });\n        this.updatePurchaseState(updatesIngredients);\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        }\n\n        for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} >\n                    <OrderSummary ingredients={this.state.ingredients} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    addIngredient={this.addIngredientHandler}\n                    removeIngredient={this.removeIngredientHandler}\n                    disabledInfo={disabledInfo}\n                    price={this.state.totalprice}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchaseHandler} />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}