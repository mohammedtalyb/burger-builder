{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        email: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        city: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        pinCode: {\n          elementTye: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementTye: 'input',\n          options: [{\n            value: 'fastest',\n            displayValue: 'Fastest'\n          }, {\n            value: 'cheapest',\n            displayValue: 'Cheapest'\n          }],\n          value: ''\n        }\n      }\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        totalPrice: this.props.totalPrice\n      };\n      axios.post('/order.json', order).then(response => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => this.setState({\n        isLoading: false\n      }));\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"pinCode\",\n      placeholder: \"Pin Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      buttonType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Order\"));\n    if (this.state.isLoading) form = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Enter your contact data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","ContactData","state","orderForm","name","elementTye","elementConfig","type","placeholder","value","email","city","pinCode","deliveryMethod","options","displayValue","orderHandler","event","preventDefault","setState","isLoading","order","ingredients","props","totalPrice","post","then","response","history","push","catch","error","render","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            email: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            city: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            pinCode: {\n                elementTye: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            deliveryMethod: {\n                elementTye: 'input',\n                options: [\n                    {value: 'fastest', displayValue: 'Fastest'},\n                    {value: 'cheapest', displayValue: 'Cheapest'}\n                ],\n                value: ''\n            }\n        }\n    }\n\n\norderHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({ isLoading: true });\n    const order = {\n        ingredients: this.props.ingredients,\n        totalPrice: this.props.totalPrice,\n\n    }\n\n    axios.post('/order.json', order)\n        .then(response => {\n            this.setState({ isLoading: false });\n            this.props.history.push('/');\n        })\n        .catch(error => this.setState({ isLoading: false }));\n}\n\nrender() {\n\n    let form = (\n        <form>\n            <Input inputtype='input' type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n            <Input inputtype='input' type=\"email\" name=\"email\" placeholder=\"Your Mail\" />\n            <Input inputtype='input' type=\"text\" name=\"street\" placeholder=\"Street\" />\n            <Input inputtype='input' type=\"text\" name=\"pinCode\" placeholder=\"Pin Code\" />\n            <Button buttonType=\"Success\" clicked={this.orderHandler}>Order</Button>\n        </form>\n    );\n\n    if (this.state.isLoading) form = <Spinner />;\n\n    return (\n        <div className={classes.ContactData}>\n            <h4>Enter your contact data</h4>\n            {form}\n        </div>\n    );\n}\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}