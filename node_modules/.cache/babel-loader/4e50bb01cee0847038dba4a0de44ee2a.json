{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      address: {\n        city: '',\n        pincode: ''\n      },\n      deliveryMethod: '',\n      ingredients: null,\n      isLoading: false,\n      totalPrice: 0\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        totalPrice: this.props.totalPrice,\n        customer: {\n          name: 'talib',\n          address: {\n            city: 'mira road',\n            pinCode: '401107'\n          },\n          deliveryMethod: 'fastest'\n        }\n      };\n      axios.post('/order.json', order).then(response => {\n        this.setState({\n          isLoading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => this.setState({\n        isLoading: false\n      }));\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputType: \"input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputType: \"input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputType: \"input\",\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputType: \"input\",\n      type: \"text\",\n      name: \"postalCode\",\n      placeholder: \"Postal Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Button, {\n      buttonType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Order\"));\n    if (this.state.isLoading) form = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Enter your contact data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/home/mohammed/Documents/react Max/react project/burger-builder/src/containers/ContactData/ContactData.js"],"names":["React","Component","classes","Button","axios","Spinner","Input","ContactData","state","name","address","city","pincode","deliveryMethod","ingredients","isLoading","totalPrice","orderHandler","event","preventDefault","setState","order","props","customer","pinCode","post","then","response","history","push","catch","error","render","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './ContactData.css';\nimport Button from '../../components/UI/Button/Button';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n\n    state = {\n        name: '',\n        address: {\n            city: '',\n            pincode: ''\n        },\n        deliveryMethod: '',\n        ingredients: null,\n        isLoading: false,\n        totalPrice: 0\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        \n        this.setState({ isLoading: true });\n        const order = {\n            ingredients: this.props.ingredients,\n            totalPrice: this.props.totalPrice,\n            customer: {\n                name: 'talib',\n                address: {\n                    city: 'mira road',\n                    pinCode: '401107',\n                },\n                deliveryMethod: 'fastest'\n            }\n        }\n\n        axios.post('/order.json', order)\n            .then(response => {\n                this.setState({ isLoading: false });\n                this.props.history.push('/');\n            })\n            .catch(error => this.setState({ isLoading: false}));\n    }\n\n    render() {\n        let form = (\n            <form>\n                <Input inputType='input' type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n                <Input inputType='input' type=\"email\" name=\"email\" placeholder=\"Your Mail\" />\n                <Input inputType='input' type=\"text\" name=\"street\" placeholder=\"Street\" />\n                <Input inputType='input' type=\"text\" name=\"postalCode\" placeholder=\"Postal Code\" />\n                <Button buttonType=\"Success\" clicked={this.orderHandler}>Order</Button>\n            </form>\n        );\n\n        if (this.state.isLoading) form = <Spinner />;\n        \n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your contact data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}